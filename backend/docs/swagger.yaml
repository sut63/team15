basePath: /api/v1
definitions:
  controllers.Bill:
    properties:
      added:
        type: string
      lease:
        type: integer
      payment:
        type: integer
      room:
        type: integer
      situation:
        type: integer
      taxpayer:
        type: string
      tell:
        type: string
      total:
        type: string
    type: object
  controllers.Cleaningroom:
    properties:
      cleanername:
        type: integer
      dateandstarttime:
        type: string
      employee:
        type: integer
      lengthtime:
        type: integer
      note:
        type: string
      numofem:
        type: integer
      phonenumber:
        type: string
      roomdetail:
        type: integer
    type: object
  controllers.Deposit:
    properties:
      added:
        type: string
      depositorname:
        type: string
      depositortell:
        type: string
      employee:
        type: integer
      info:
        type: string
      lease:
        type: integer
      parcelcode:
        type: string
      recipienttell:
        type: string
      statusd:
        type: integer
    type: object
  controllers.Lease:
    properties:
      added:
        type: string
      agetenant:
        type: integer
      employee:
        type: integer
      idtenant:
        type: string
      numbtenant:
        type: string
      roomdetail:
        type: integer
      tenant:
        type: string
      wifi:
        type: integer
    type: object
  controllers.Repairinvoice:
    properties:
      bequipment:
        type: string
      employee:
        type: integer
      rentalstatus:
        type: integer
    type: object
  controllers.Roomdetail:
    properties:
      bed:
        type: integer
      bedtype:
        type: integer
      employee:
        type: integer
      petrule:
        type: integer
      phone:
        type: string
      pledge:
        type: integer
      roomnumber:
        type: string
      roomprice:
        type: integer
      roomtypename:
        type: string
      sleep:
        type: integer
      staytype:
        type: integer
    type: object
  ent.Bedtype:
    properties:
      bedtypename:
        description: Bedtypename holds the value of the "bedtypename" field.
        type: string
      edges:
        $ref: '#/definitions/ent.BedtypeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the BedtypeQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.BedtypeEdges:
    properties:
      roomdetails:
        description: Roomdetails holds the value of the roomdetails edge.
        items:
          $ref: '#/definitions/ent.Roomdetail'
        type: array
    type: object
  ent.Bill:
    properties:
      addedtime:
        description: Addedtime holds the value of the "addedtime" field.
        type: string
      edges:
        $ref: '#/definitions/ent.BillEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the BillQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      taxpayer:
        description: Taxpayer holds the value of the "taxpayer" field.
        type: string
      tell:
        description: Tell holds the value of the "tell" field.
        type: string
      total:
        description: Total holds the value of the "total" field.
        type: string
    type: object
  ent.BillEdges:
    properties:
      lease:
        $ref: '#/definitions/ent.Lease'
        description: Lease holds the value of the Lease edge.
        type: object
      payment:
        $ref: '#/definitions/ent.Payment'
        description: Payment holds the value of the Payment edge.
        type: object
      situation:
        $ref: '#/definitions/ent.Situation'
        description: Situation holds the value of the Situation edge.
        type: object
    type: object
  ent.Cleanername:
    properties:
      cleanername:
        description: Cleanername holds the value of the "cleanername" field.
        type: string
      edges:
        $ref: '#/definitions/ent.CleanernameEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the CleanernameQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.CleanernameEdges:
    properties:
      cleaningrooms:
        description: Cleaningrooms holds the value of the cleaningrooms edge.
        items:
          $ref: '#/definitions/ent.Cleaningroom'
        type: array
    type: object
  ent.Cleaningroom:
    properties:
      dateandstarttime:
        description: Dateandstarttime holds the value of the "dateandstarttime" field.
        type: string
      edges:
        $ref: '#/definitions/ent.CleaningroomEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the CleaningroomQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      note:
        description: Note holds the value of the "note" field.
        type: string
      numofem:
        description: Numofem holds the value of the "numofem" field.
        type: integer
      phonenumber:
        description: Phonenumber holds the value of the "phonenumber" field.
        type: string
    type: object
  ent.CleaningroomEdges:
    properties:
      cleanername:
        $ref: '#/definitions/ent.Cleanername'
        description: Cleanername holds the value of the Cleanername edge.
        type: object
      employee:
        $ref: '#/definitions/ent.Employee'
        description: Employee holds the value of the Employee edge.
        type: object
      lengthtime:
        $ref: '#/definitions/ent.Lengthtime'
        description: Lengthtime holds the value of the Lengthtime edge.
        type: object
      roomdetail:
        $ref: '#/definitions/ent.Roomdetail'
        description: Roomdetail holds the value of the roomdetail edge.
        type: object
    type: object
  ent.Deposit:
    properties:
      addedtime:
        description: Addedtime holds the value of the "addedtime" field.
        type: string
      depositorname:
        description: Depositorname holds the value of the "depositorname" field.
        type: string
      depositortell:
        description: Depositortell holds the value of the "depositortell" field.
        type: string
      edges:
        $ref: '#/definitions/ent.DepositEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the DepositQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      info:
        description: Info holds the value of the "info" field.
        type: string
      parcelcode:
        description: Parcelcode holds the value of the "parcelcode" field.
        type: string
      recipienttell:
        description: Recipienttell holds the value of the "recipienttell" field.
        type: string
    type: object
  ent.DepositEdges:
    properties:
      employee:
        $ref: '#/definitions/ent.Employee'
        description: Employee holds the value of the Employee edge.
        type: object
      lease:
        $ref: '#/definitions/ent.Lease'
        description: Lease holds the value of the Lease edge.
        type: object
      statusd:
        $ref: '#/definitions/ent.Statusd'
        description: Statusd holds the value of the Statusd edge.
        type: object
    type: object
  ent.Employee:
    properties:
      edges:
        $ref: '#/definitions/ent.EmployeeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the EmployeeQuery when eager-loading is set.
        type: object
      email:
        description: Email holds the value of the "email" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
      password:
        description: Password holds the value of the "password" field.
        type: string
    type: object
  ent.EmployeeEdges:
    properties:
      cleaningrooms:
        description: Cleaningrooms holds the value of the cleaningrooms edge.
        items:
          $ref: '#/definitions/ent.Cleaningroom'
        type: array
      employees:
        description: Employees holds the value of the employees edge.
        items:
          $ref: '#/definitions/ent.Deposit'
        type: array
      jobposition:
        $ref: '#/definitions/ent.Jobposition'
        description: Jobposition holds the value of the jobposition edge.
        type: object
      leasess:
        description: Leasess holds the value of the leasess edge.
        items:
          $ref: '#/definitions/ent.Lease'
        type: array
      repairinvoices:
        description: Repairinvoices holds the value of the repairinvoices edge.
        items:
          $ref: '#/definitions/ent.Repairinvoice'
        type: array
      roomdetails:
        description: Roomdetails holds the value of the roomdetails edge.
        items:
          $ref: '#/definitions/ent.Roomdetail'
        type: array
    type: object
  ent.Jobposition:
    properties:
      edges:
        $ref: '#/definitions/ent.JobpositionEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the JobpositionQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      positionname:
        description: Positionname holds the value of the "positionname" field.
        type: string
    type: object
  ent.JobpositionEdges:
    properties:
      employees:
        description: Employees holds the value of the employees edge.
        items:
          $ref: '#/definitions/ent.Employee'
        type: array
      roomdetails:
        description: Roomdetails holds the value of the roomdetails edge.
        items:
          $ref: '#/definitions/ent.Roomdetail'
        type: array
    type: object
  ent.Lease:
    properties:
      addedtime:
        description: Addedtime holds the value of the "addedtime" field.
        type: string
      agetenant:
        description: Agetenant holds the value of the "agetenant" field.
        type: integer
      edges:
        $ref: '#/definitions/ent.LeaseEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the LeaseQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      idtenant:
        description: Idtenant holds the value of the "idtenant" field.
        type: string
      numbtenant:
        description: Numbtenant holds the value of the "numbtenant" field.
        type: string
      tenant:
        description: Tenant holds the value of the "tenant" field.
        type: string
    type: object
  ent.LeaseEdges:
    properties:
      bill:
        description: Bill holds the value of the bill edge.
        items:
          $ref: '#/definitions/ent.Bill'
        type: array
      employee:
        $ref: '#/definitions/ent.Employee'
        description: Employee holds the value of the employee edge.
        type: object
      leases:
        description: Leases holds the value of the leases edge.
        items:
          $ref: '#/definitions/ent.Deposit'
        type: array
      roomdetail:
        $ref: '#/definitions/ent.Roomdetail'
        description: Roomdetail holds the value of the Roomdetail edge.
        type: object
      wifi:
        $ref: '#/definitions/ent.Wifi'
        description: Wifi holds the value of the Wifi edge.
        type: object
    type: object
  ent.Lengthtime:
    properties:
      edges:
        $ref: '#/definitions/ent.LengthtimeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the LengthtimeQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      lengthtime:
        description: Lengthtime holds the value of the "lengthtime" field.
        type: string
    type: object
  ent.LengthtimeEdges:
    properties:
      cleaningrooms:
        description: Cleaningrooms holds the value of the cleaningrooms edge.
        items:
          $ref: '#/definitions/ent.Cleaningroom'
        type: array
    type: object
  ent.Payment:
    properties:
      edges:
        $ref: '#/definitions/ent.PaymentEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PaymentQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      paymentname:
        description: Paymentname holds the value of the "paymentname" field.
        type: string
    type: object
  ent.PaymentEdges:
    properties:
      payments:
        description: Payments holds the value of the payments edge.
        items:
          $ref: '#/definitions/ent.Bill'
        type: array
    type: object
  ent.Petrule:
    properties:
      edges:
        $ref: '#/definitions/ent.PetruleEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PetruleQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      petrule:
        description: Petrule holds the value of the "petrule" field.
        type: string
    type: object
  ent.PetruleEdges:
    properties:
      roomdetails:
        description: Roomdetails holds the value of the roomdetails edge.
        items:
          $ref: '#/definitions/ent.Roomdetail'
        type: array
    type: object
  ent.Pledge:
    properties:
      edges:
        $ref: '#/definitions/ent.PledgeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PledgeQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      provision:
        description: Provision holds the value of the "provision" field.
        type: string
    type: object
  ent.PledgeEdges:
    properties:
      roomdetails:
        description: Roomdetails holds the value of the roomdetails edge.
        items:
          $ref: '#/definitions/ent.Roomdetail'
        type: array
    type: object
  ent.Rentalstatus:
    properties:
      edges:
        $ref: '#/definitions/ent.RentalstatusEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the RentalstatusQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      rentalstatus:
        description: Rentalstatus holds the value of the "rentalstatus" field.
        type: string
    type: object
  ent.RentalstatusEdges:
    properties:
      repairinvoices:
        description: Repairinvoices holds the value of the repairinvoices edge.
        items:
          $ref: '#/definitions/ent.Repairinvoice'
        type: array
    type: object
  ent.Repairinvoice:
    properties:
      bequipment:
        description: Bequipment holds the value of the "bequipment" field.
        type: string
      edges:
        $ref: '#/definitions/ent.RepairinvoiceEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the RepairinvoiceQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.RepairinvoiceEdges:
    properties:
      employee:
        $ref: '#/definitions/ent.Employee'
        description: Employee holds the value of the employee edge.
        type: object
      rentalstatus:
        $ref: '#/definitions/ent.Rentalstatus'
        description: Rentalstatus holds the value of the Rentalstatus edge.
        type: object
    type: object
  ent.Roomdetail:
    properties:
      bed:
        description: Bed holds the value of the "bed" field.
        type: integer
      edges:
        $ref: '#/definitions/ent.RoomdetailEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the RoomdetailQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      phone:
        description: Phone holds the value of the "phone" field.
        type: string
      roomnumber:
        description: Roomnumber holds the value of the "roomnumber" field.
        type: string
      roomprice:
        description: Roomprice holds the value of the "roomprice" field.
        type: integer
      roomtypename:
        description: Roomtypename holds the value of the "roomtypename" field.
        type: string
      sleep:
        description: Sleep holds the value of the "sleep" field.
        type: integer
    type: object
  ent.RoomdetailEdges:
    properties:
      bedtype:
        $ref: '#/definitions/ent.Bedtype'
        description: Bedtype holds the value of the bedtype edge.
        type: object
      cleaningrooms:
        description: Cleaningrooms holds the value of the cleaningrooms edge.
        items:
          $ref: '#/definitions/ent.Cleaningroom'
        type: array
      employee:
        $ref: '#/definitions/ent.Employee'
        description: Employee holds the value of the employee edge.
        type: object
      jobposition:
        $ref: '#/definitions/ent.Jobposition'
        description: Jobposition holds the value of the jobposition edge.
        type: object
      petrule:
        $ref: '#/definitions/ent.Petrule'
        description: Petrule holds the value of the petrule edge.
        type: object
      pledge:
        $ref: '#/definitions/ent.Pledge'
        description: Pledge holds the value of the pledge edge.
        type: object
      roomdetails:
        $ref: '#/definitions/ent.Lease'
        description: Roomdetails holds the value of the roomdetails edge.
        type: object
      staytype:
        $ref: '#/definitions/ent.Staytype'
        description: Staytype holds the value of the staytype edge.
        type: object
    type: object
  ent.Situation:
    properties:
      edges:
        $ref: '#/definitions/ent.SituationEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the SituationQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      situationname:
        description: Situationname holds the value of the "situationname" field.
        type: string
    type: object
  ent.SituationEdges:
    properties:
      situations:
        description: Situations holds the value of the situations edge.
        items:
          $ref: '#/definitions/ent.Bill'
        type: array
    type: object
  ent.Statusd:
    properties:
      edges:
        $ref: '#/definitions/ent.StatusdEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the StatusdQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      statusdname:
        description: Statusdname holds the value of the "statusdname" field.
        type: string
    type: object
  ent.StatusdEdges:
    properties:
      statusds:
        description: Statusds holds the value of the statusds edge.
        items:
          $ref: '#/definitions/ent.Deposit'
        type: array
    type: object
  ent.Staytype:
    properties:
      edges:
        $ref: '#/definitions/ent.StaytypeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the StaytypeQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      staytype:
        description: Staytype holds the value of the "staytype" field.
        type: string
    type: object
  ent.StaytypeEdges:
    properties:
      roomdetails:
        description: Roomdetails holds the value of the roomdetails edge.
        items:
          $ref: '#/definitions/ent.Roomdetail'
        type: array
    type: object
  ent.Wifi:
    properties:
      edges:
        $ref: '#/definitions/ent.WifiEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the WifiQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      wifiname:
        description: Wifiname holds the value of the "wifiname" field.
        type: string
    type: object
  ent.WifiEdges:
    properties:
      wifis:
        description: Wifis holds the value of the wifis edge.
        items:
          $ref: '#/definitions/ent.Lease'
        type: array
    type: object
  gin.H:
    additionalProperties: true
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for SUT SE 2563
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SUT SA Example API
  version: "1.0"
paths:
  /Rentalstatuss/{id}:
    get:
      description: get rentalstatus by ID
      operationId: get-rentalstatus
      parameters:
      - description: Rentalstatus ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Rentalstatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a rentalstatus entity by ID
  /bedtype/{id}:
    delete:
      description: get bedtype by ID
      operationId: delete-bedtype
      parameters:
      - description: Bedtype ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a bedtype entity by ID
  /bedtypes:
    get:
      description: list bedtype entities
      operationId: list-bedtype
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Bedtype'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List bedtype entities
    post:
      consumes:
      - application/json
      description: Create bedtype
      operationId: create-bedtype
      parameters:
      - description: Bedtype entity
        in: body
        name: bedtype
        required: true
        schema:
          $ref: '#/definitions/ent.Bedtype'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Bedtype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create bedtype
  /bedtypes/{id}:
    get:
      description: get bedtype by ID
      operationId: get-bedtype
      parameters:
      - description: Bedtype ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Bedtype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a bedtype entity by ID
  /bills:
    get:
      description: list bill entities
      operationId: list-bill
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Bill'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List bill entities
    post:
      consumes:
      - application/json
      description: Create bill
      operationId: create-bill
      parameters:
      - description: Bill entity
        in: body
        name: bill
        required: true
        schema:
          $ref: '#/definitions/controllers.Bill'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Bill'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create bill
  /cleanernames:
    get:
      description: list cleanername entities
      operationId: list-cleanername
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Cleanername'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List cleanername entities
  /cleanernames/{id}:
    get:
      description: get cleanername by ID
      operationId: get-cleanername
      parameters:
      - description: Cleanername ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Cleanername'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a cleanername entity by ID
  /cleaningrooms:
    get:
      description: list cleaningroom entities
      operationId: list-cleaningroom
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Cleaningroom'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List cleaningroom entities
    post:
      consumes:
      - application/json
      description: Create cleaningroom
      operationId: create-cleaningroom
      parameters:
      - description: Cleaningroom entity
        in: body
        name: cleaningroom
        required: true
        schema:
          $ref: '#/definitions/controllers.Cleaningroom'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Cleaningroom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create cleaningroom
  /cleaningrooms/{id}:
    get:
      description: get cleaningroom by ID
      operationId: get-cleaningroom
      parameters:
      - description: Cleaningroom ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Cleaningroom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a cleaningroom entity by ID
  /deposits:
    get:
      description: list deposit entities
      operationId: list-deposit
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Deposit'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List deposit entities
    post:
      consumes:
      - application/json
      description: Create deposit
      operationId: create-deposit
      parameters:
      - description: Deposit entity
        in: body
        name: deposit
        required: true
        schema:
          $ref: '#/definitions/controllers.Deposit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Deposit'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create deposit
  /employee/{id}:
    delete:
      description: get employee by ID
      operationId: delete-employee
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a employee entity by ID
  /employees:
    get:
      description: list employee entities
      operationId: list-employee
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Employee'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List employee entities
  /employees/{id}:
    get:
      description: get employee by ID
      operationId: get-employee
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Employee'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a employee entity by ID
  /leases:
    get:
      description: list lease entities
      operationId: list-lease
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Lease'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List lease entities
    post:
      consumes:
      - application/json
      description: Create lease
      operationId: create-lease
      parameters:
      - description: Lease entity
        in: body
        name: lease
        required: true
        schema:
          $ref: '#/definitions/controllers.Lease'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Lease'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create lease
  /lengthtimes:
    get:
      description: list lengthtime entities
      operationId: list-lengthtime
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Lengthtime'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List lengthtime entities
  /lengthtimes/{id}:
    get:
      description: get lengthtime by ID
      operationId: get-lengthtime
      parameters:
      - description: Lengthtime ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Lengthtime'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a lengthtime entity by ID
  /payment/{id}:
    delete:
      description: get payment by ID
      operationId: delete-payment
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a payment entity by ID
  /payments:
    get:
      description: list payment entities
      operationId: list-payment
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Payment'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List payment entities
    post:
      consumes:
      - application/json
      description: Create payment
      operationId: create-payment
      parameters:
      - description: Payment entity
        in: body
        name: payment
        required: true
        schema:
          $ref: '#/definitions/ent.Payment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Payment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create payment
  /payments/{id}:
    get:
      description: get payment by ID
      operationId: get-payment
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Payment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a payment entity by ID
  /petrule/{id}:
    delete:
      description: get petrule by ID
      operationId: delete-petrule
      parameters:
      - description: Petrule ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a petrule entity by ID
  /petrules:
    get:
      description: list petrule entities
      operationId: list-petrule
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Petrule'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List petrule entities
    post:
      consumes:
      - application/json
      description: Create petrule
      operationId: create-petrule
      parameters:
      - description: Petrule entity
        in: body
        name: petrule
        required: true
        schema:
          $ref: '#/definitions/ent.Petrule'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Petrule'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create petrule
  /petrules/{id}:
    get:
      description: get petrule by ID
      operationId: get-petrule
      parameters:
      - description: Petrule ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Petrule'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a petrule entity by ID
  /pledge/{id}:
    delete:
      description: get pledge by ID
      operationId: delete-pledge
      parameters:
      - description: Pledge ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a pledge entity by ID
  /pledges:
    get:
      description: list pledge entities
      operationId: list-pledge
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Pledge'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List pledge entities
    post:
      consumes:
      - application/json
      description: Create pledge
      operationId: create-pledge
      parameters:
      - description: Pledge entity
        in: body
        name: pledge
        required: true
        schema:
          $ref: '#/definitions/ent.Pledge'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Pledge'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create pledge
  /pledges/{id}:
    get:
      description: get pledge by ID
      operationId: get-pledge
      parameters:
      - description: Pledge ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Pledge'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a pledge entity by ID
  /rentalstatuss:
    get:
      description: list rentalstatus entities
      operationId: list-rentalstatus
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Rentalstatus'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List rentalstatus entities
    post:
      consumes:
      - application/json
      description: Create rentalstatus
      operationId: create-rentalstatus
      parameters:
      - description: Rentalstatus entity
        in: body
        name: rentalstatus
        required: true
        schema:
          $ref: '#/definitions/ent.Rentalstatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Rentalstatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create rentalstatus
  /repairinvoices:
    get:
      description: list repairinvoice entities
      operationId: list-repairinvoice
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Repairinvoice'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List repairinvoice entities
    post:
      consumes:
      - application/json
      description: Create repairinvoice
      operationId: create-repairinvoice
      parameters:
      - description: Repairinvoice entity
        in: body
        name: repairinvoice
        required: true
        schema:
          $ref: '#/definitions/controllers.Repairinvoice'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Repairinvoice'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create repairinvoice
  /roomdetails:
    get:
      description: list roomdetail entities
      operationId: list-roomdetail
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Roomdetail'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List roomdetail entities
    post:
      consumes:
      - application/json
      description: Create roomdetail
      operationId: create-roomdetail
      parameters:
      - description: Roomdetail entity
        in: body
        name: roomdetail
        required: true
        schema:
          $ref: '#/definitions/controllers.Roomdetail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Roomdetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create roomdetail
  /roomdetails/{id}:
    delete:
      description: get roomdetail by ID
      operationId: delete-roomdetail
      parameters:
      - description: Roomdetail ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a roomdetail entity by ID
    get:
      description: get roomdetail by ID
      operationId: get-roomdetail
      parameters:
      - description: Roomdetail ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Roomdetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a roomdetail entity by ID
  /searchdeposits:
    get:
      description: get deposit by Depositid
      operationId: get-deposit-by-depositid
      parameters:
      - description: Parcelcode Search
        in: query
        name: parcelcode
        type: string
      - description: Lease Search
        in: query
        name: lease
        type: integer
      - description: Statusd Search
        in: query
        name: statusd
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Deposit'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a deposit entity by Depositid
  /searchroomdetails:
    get:
      description: get roomdetail by Roomname
      operationId: get-roomdetail-by-roomname
      parameters:
      - description: Roomname Search
        in: query
        name: roomtypename
        type: string
      - description: Price Search
        in: query
        name: price
        type: integer
      - description: Bedtype Search
        in: query
        name: bedtype
        type: integer
      - description: Staytype Search
        in: query
        name: staytype
        type: integer
      - description: Petrule Search
        in: query
        name: petrule
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Roomdetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a roomdetail entity by Roomname
  /situation/{id}:
    delete:
      description: get situation by ID
      operationId: delete-situation
      parameters:
      - description: Situation ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a situation entity by ID
  /situations:
    get:
      description: list situation entities
      operationId: list-situation
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Situation'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List situation entities
    post:
      consumes:
      - application/json
      description: Create situation
      operationId: create-situation
      parameters:
      - description: Situation entity
        in: body
        name: situation
        required: true
        schema:
          $ref: '#/definitions/ent.Situation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Situation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create situation
  /situations/{id}:
    get:
      description: get situation by ID
      operationId: get-situation
      parameters:
      - description: Situation ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Situation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a situation entity by ID
  /statusd/{id}:
    delete:
      description: get statusd by ID
      operationId: delete-statusd
      parameters:
      - description: Statusd ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a statusd entity by ID
  /statusds:
    get:
      description: list statusd entities
      operationId: list-statusd
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Statusd'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List statusd entities
    post:
      consumes:
      - application/json
      description: Create statusd
      operationId: create-statusd
      parameters:
      - description: Statusd entity
        in: body
        name: statusd
        required: true
        schema:
          $ref: '#/definitions/ent.Statusd'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Statusd'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create statusd
  /statusds/{id}:
    get:
      description: get statusd by ID
      operationId: get-statusd
      parameters:
      - description: Statusd ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Statusd'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a statusd entity by ID
  /staytype/{id}:
    delete:
      description: get staytype by ID
      operationId: delete-staytype
      parameters:
      - description: Staytype ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a staytype entity by ID
  /staytypes:
    get:
      description: list staytype entities
      operationId: list-staytype
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Staytype'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List staytype entities
    post:
      consumes:
      - application/json
      description: Create staytype
      operationId: create-staytype
      parameters:
      - description: Staytype entity
        in: body
        name: staytype
        required: true
        schema:
          $ref: '#/definitions/ent.Staytype'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Staytype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create staytype
  /staytypes/{id}:
    get:
      description: get staytype by ID
      operationId: get-staytype
      parameters:
      - description: Staytype ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Staytype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a staytype entity by ID
  /wifis:
    get:
      description: list wifi entities
      operationId: list-wifi
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Wifi'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List wifi entities
    post:
      consumes:
      - application/json
      description: Create wifi
      operationId: create-wifi
      parameters:
      - description: Wifi entity
        in: body
        name: wifi
        required: true
        schema:
          $ref: '#/definitions/ent.Wifi'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Wifi'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create wifi
  /wifis/{id}:
    delete:
      description: get wifi by ID
      operationId: delete-wifi
      parameters:
      - description: Wifi ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a wifi entity by ID
    get:
      description: get wifi by ID
      operationId: get-wifi
      parameters:
      - description: Wifi ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Wifi'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a wifi entity by ID
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    authorizationUrl: ""
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    authorizationUrl: ""
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
