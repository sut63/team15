basePath: /api/v1
definitions:
  controllers.Deposit:
    properties:
      added:
        type: string
      employee:
        type: integer
      info:
        type: string
      statusd:
        type: integer
    type: object
  ent.CleanerName:
    properties:
      cleanername:
        description: Cleanername holds the value of the "cleanername" field.
        type: string
      edges:
        $ref: '#/definitions/ent.CleanerNameEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the CleanerNameQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.CleanerNameEdges:
    properties:
      cleaningrooms:
        description: Cleaningrooms holds the value of the cleaningrooms edge.
        items:
          $ref: '#/definitions/ent.CleaningRoom'
        type: array
    type: object
  ent.CleaningRoom:
    properties:
      dateandstarttime:
        description: Dateandstarttime holds the value of the "dateandstarttime" field.
        type: string
      edges:
        $ref: '#/definitions/ent.CleaningRoomEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the CleaningRoomQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      note:
        description: Note holds the value of the "note" field.
        type: string
    type: object
  ent.CleaningRoomEdges:
    properties:
      cleanerName:
        $ref: '#/definitions/ent.CleanerName'
        description: CleanerName holds the value of the CleanerName edge.
        type: object
      lengthTime:
        $ref: '#/definitions/ent.LengthTime'
        description: LengthTime holds the value of the LengthTime edge.
        type: object
    type: object
  ent.Deposit:
    properties:
      addedtime:
        description: Addedtime holds the value of the "addedtime" field.
        type: string
      edges:
        $ref: '#/definitions/ent.DepositEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the DepositQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      info:
        description: Info holds the value of the "info" field.
        type: string
    type: object
  ent.DepositEdges:
    properties:
      employee:
        $ref: '#/definitions/ent.Employee'
        description: Employee holds the value of the Employee edge.
        type: object
      statusd:
        $ref: '#/definitions/ent.Statusd'
        description: Statusd holds the value of the Statusd edge.
        type: object
    type: object
  ent.Employee:
    properties:
      edges:
        $ref: '#/definitions/ent.EmployeeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the EmployeeQuery when eager-loading is set.
        type: object
      employeeemail:
        description: Employeeemail holds the value of the "employeeemail" field.
        type: string
      employeename:
        description: Employeename holds the value of the "employeename" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
      password:
        description: Password holds the value of the "password" field.
        type: string
    type: object
  ent.EmployeeEdges:
    properties:
      employees:
        description: Employees holds the value of the employees edge.
        items:
          $ref: '#/definitions/ent.Deposit'
        type: array
    type: object
  ent.LengthTime:
    properties:
      edges:
        $ref: '#/definitions/ent.LengthTimeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the LengthTimeQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      lengthtime:
        description: Lengthtime holds the value of the "lengthtime" field.
        type: string
    type: object
  ent.LengthTimeEdges:
    properties:
      cleaningrooms:
        description: Cleaningrooms holds the value of the cleaningrooms edge.
        items:
          $ref: '#/definitions/ent.CleaningRoom'
        type: array
    type: object
  ent.Statusd:
    properties:
      edges:
        $ref: '#/definitions/ent.StatusdEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the StatusdQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      statusdname:
        description: Statusdname holds the value of the "statusdname" field.
        type: string
    type: object
  ent.StatusdEdges:
    properties:
      statusds:
        description: Statusds holds the value of the statusds edge.
        items:
          $ref: '#/definitions/ent.Deposit'
        type: array
    type: object
  gin.H:
    additionalProperties: true
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for SUT SE 2563
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SUT SA Example API
  version: "1.0"
paths:
  /cleanernames:
    get:
      description: list cleanername entities
      operationId: list-cleanername
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.CleanerName'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List cleanername entities
  /cleanernames/{id}:
    get:
      description: get cleanername by ID
      operationId: get-cleanername
      parameters:
      - description: CleanerName ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.CleanerName'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a cleanername entity by ID
  /cleaningrooms:
    get:
      description: list cleaningroom entities
      operationId: list-cleaningroom
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.CleaningRoom'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List cleaningroom entities
    post:
      consumes:
      - application/json
      description: Create cleaningroom
      operationId: create-cleaningroom
      parameters:
      - description: CleaningRoom entity
        in: body
        name: cleaningroom
        required: true
        schema:
          $ref: '#/definitions/ent.CleaningRoom'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.CleaningRoom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create cleaningroom
  /cleaningrooms/{id}:
    get:
      description: get cleaningroom by ID
      operationId: get-cleaningroom
      parameters:
      - description: CleaningRoom ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.CleaningRoom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a cleaningroom entity by ID
  /deposits:
    get:
      description: list deposit entities
      operationId: list-deposit
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Deposit'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List deposit entities
    post:
      consumes:
      - application/json
      description: Create deposit
      operationId: create-deposit
      parameters:
      - description: Deposit entity
        in: body
        name: deposit
        required: true
        schema:
          $ref: '#/definitions/controllers.Deposit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Deposit'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create deposit
  /employee/{id}:
    delete:
      description: get employee by ID
      operationId: delete-employee
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a employee entity by ID
  /employees:
    get:
      description: list employee entities
      operationId: list-employee
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Employee'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List employee entities
    post:
      consumes:
      - application/json
      description: Create employee
      operationId: create-employee
      parameters:
      - description: Employee entity
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/ent.Employee'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Employee'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create employee
  /employees/{id}:
    get:
      description: get employee by ID
      operationId: get-employee
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Employee'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a employee entity by ID
  /lengthtimes:
    get:
      description: list lengthtime entities
      operationId: list-lengthtime
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.LengthTime'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List lengthtime entities
  /lengthtimes/{id}:
    get:
      description: get lengthtime by ID
      operationId: get-lengthtime
      parameters:
      - description: LengthTime ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.LengthTime'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a lengthtime entity by ID
  /statusd/{id}:
    delete:
      description: get statusd by ID
      operationId: delete-statusd
      parameters:
      - description: Statusd ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a statusd entity by ID
  /statusds:
    get:
      description: list statusd entities
      operationId: list-statusd
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Statusd'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List statusd entities
    post:
      consumes:
      - application/json
      description: Create statusd
      operationId: create-statusd
      parameters:
      - description: Statusd entity
        in: body
        name: statusd
        required: true
        schema:
          $ref: '#/definitions/ent.Statusd'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Statusd'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create statusd
  /statusds/{id}:
    get:
      description: get statusd by ID
      operationId: get-statusd
      parameters:
      - description: Statusd ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Statusd'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a statusd entity by ID
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    authorizationUrl: ""
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    authorizationUrl: ""
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
