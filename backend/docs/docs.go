// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/Rentalstatuss/{id}": {
            "get": {
                "description": "get rentalstatus by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a rentalstatus entity by ID",
                "operationId": "get-rentalstatus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Rentalstatus ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Rentalstatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/bedtype/{id}": {
            "delete": {
                "description": "get bedtype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a bedtype entity by ID",
                "operationId": "delete-bedtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bedtype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/bedtypes": {
            "get": {
                "description": "list bedtype entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List bedtype entities",
                "operationId": "list-bedtype",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Bedtype"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create bedtype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create bedtype",
                "operationId": "create-bedtype",
                "parameters": [
                    {
                        "description": "Bedtype entity",
                        "name": "bedtype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Bedtype"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Bedtype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/bedtypes/{id}": {
            "get": {
                "description": "get bedtype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a bedtype entity by ID",
                "operationId": "get-bedtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bedtype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Bedtype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/bills": {
            "get": {
                "description": "list bill entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List bill entities",
                "operationId": "list-bill",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Bill"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create bill",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create bill",
                "operationId": "create-bill",
                "parameters": [
                    {
                        "description": "Bill entity",
                        "name": "bill",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Bill"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Bill"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/cleanernames": {
            "get": {
                "description": "list cleanername entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List cleanername entities",
                "operationId": "list-cleanername",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Cleanername"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/cleanernames/{id}": {
            "get": {
                "description": "get cleanername by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a cleanername entity by ID",
                "operationId": "get-cleanername",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cleanername ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Cleanername"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/cleaningrooms": {
            "get": {
                "description": "list cleaningroom entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List cleaningroom entities",
                "operationId": "list-cleaningroom",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Cleaningroom"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create cleaningroom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create cleaningroom",
                "operationId": "create-cleaningroom",
                "parameters": [
                    {
                        "description": "Cleaningroom entity",
                        "name": "cleaningroom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Cleaningroom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Cleaningroom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/cleaningrooms/{id}": {
            "get": {
                "description": "get cleaningroom by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a cleaningroom entity by ID",
                "operationId": "get-cleaningroom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cleaningroom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Cleaningroom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/deposits": {
            "get": {
                "description": "list deposit entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List deposit entities",
                "operationId": "list-deposit",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Deposit"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create deposit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create deposit",
                "operationId": "create-deposit",
                "parameters": [
                    {
                        "description": "Deposit entity",
                        "name": "deposit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Deposit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Deposit"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/employee/{id}": {
            "delete": {
                "description": "get employee by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a employee entity by ID",
                "operationId": "delete-employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/employees": {
            "get": {
                "description": "list employee entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List employee entities",
                "operationId": "list-employee",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Employee"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/employees/{id}": {
            "get": {
                "description": "get employee by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a employee entity by ID",
                "operationId": "get-employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/leases": {
            "get": {
                "description": "list lease entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List lease entities",
                "operationId": "list-lease",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Lease"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create lease",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create lease",
                "operationId": "create-lease",
                "parameters": [
                    {
                        "description": "Lease entity",
                        "name": "lease",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Lease"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Lease"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/lengthtimes": {
            "get": {
                "description": "list lengthtime entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List lengthtime entities",
                "operationId": "list-lengthtime",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Lengthtime"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/lengthtimes/{id}": {
            "get": {
                "description": "get lengthtime by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a lengthtime entity by ID",
                "operationId": "get-lengthtime",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Lengthtime ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Lengthtime"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/payment/{id}": {
            "delete": {
                "description": "get payment by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a payment entity by ID",
                "operationId": "delete-payment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Payment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/payments": {
            "get": {
                "description": "list payment entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List payment entities",
                "operationId": "list-payment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Payment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create payment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create payment",
                "operationId": "create-payment",
                "parameters": [
                    {
                        "description": "Payment entity",
                        "name": "payment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Payment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Payment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/payments/{id}": {
            "get": {
                "description": "get payment by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a payment entity by ID",
                "operationId": "get-payment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Payment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Payment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/petrule/{id}": {
            "delete": {
                "description": "get petrule by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a petrule entity by ID",
                "operationId": "delete-petrule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Petrule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/petrules": {
            "get": {
                "description": "list petrule entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List petrule entities",
                "operationId": "list-petrule",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Petrule"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create petrule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create petrule",
                "operationId": "create-petrule",
                "parameters": [
                    {
                        "description": "Petrule entity",
                        "name": "petrule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Petrule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Petrule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/petrules/{id}": {
            "get": {
                "description": "get petrule by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a petrule entity by ID",
                "operationId": "get-petrule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Petrule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Petrule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/pledge/{id}": {
            "delete": {
                "description": "get pledge by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a pledge entity by ID",
                "operationId": "delete-pledge",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pledge ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/pledges": {
            "get": {
                "description": "list pledge entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List pledge entities",
                "operationId": "list-pledge",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Pledge"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create pledge",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create pledge",
                "operationId": "create-pledge",
                "parameters": [
                    {
                        "description": "Pledge entity",
                        "name": "pledge",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Pledge"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Pledge"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/pledges/{id}": {
            "get": {
                "description": "get pledge by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a pledge entity by ID",
                "operationId": "get-pledge",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pledge ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Pledge"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/rentalstatuss": {
            "get": {
                "description": "list rentalstatus entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List rentalstatus entities",
                "operationId": "list-rentalstatus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Rentalstatus"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create rentalstatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create rentalstatus",
                "operationId": "create-rentalstatus",
                "parameters": [
                    {
                        "description": "Rentalstatus entity",
                        "name": "rentalstatus",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Rentalstatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Rentalstatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/repairinvoices": {
            "get": {
                "description": "list repairinvoice entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List repairinvoice entities",
                "operationId": "list-repairinvoice",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Repairinvoice"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create repairinvoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create repairinvoice",
                "operationId": "create-repairinvoice",
                "parameters": [
                    {
                        "description": "Repairinvoice entity",
                        "name": "repairinvoice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Repairinvoice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Repairinvoice"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/roomdetails": {
            "get": {
                "description": "list roomdetail entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List roomdetail entities",
                "operationId": "list-roomdetail",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Roomdetail"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create roomdetail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create roomdetail",
                "operationId": "create-roomdetail",
                "parameters": [
                    {
                        "description": "Roomdetail entity",
                        "name": "roomdetail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Roomdetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Roomdetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/roomdetails/{id}": {
            "get": {
                "description": "get roomdetail by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a roomdetail entity by ID",
                "operationId": "get-roomdetail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Roomdetail ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Roomdetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get roomdetail by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a roomdetail entity by ID",
                "operationId": "delete-roomdetail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Roomdetail ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/situation/{id}": {
            "delete": {
                "description": "get situation by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a situation entity by ID",
                "operationId": "delete-situation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Situation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/situations": {
            "get": {
                "description": "list situation entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List situation entities",
                "operationId": "list-situation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Situation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create situation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create situation",
                "operationId": "create-situation",
                "parameters": [
                    {
                        "description": "Situation entity",
                        "name": "situation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Situation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Situation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/situations/{id}": {
            "get": {
                "description": "get situation by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a situation entity by ID",
                "operationId": "get-situation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Situation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Situation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statusd/{id}": {
            "delete": {
                "description": "get statusd by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a statusd entity by ID",
                "operationId": "delete-statusd",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Statusd ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statusds": {
            "get": {
                "description": "list statusd entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List statusd entities",
                "operationId": "list-statusd",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Statusd"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create statusd",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create statusd",
                "operationId": "create-statusd",
                "parameters": [
                    {
                        "description": "Statusd entity",
                        "name": "statusd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Statusd"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Statusd"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statusds/{id}": {
            "get": {
                "description": "get statusd by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a statusd entity by ID",
                "operationId": "get-statusd",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Statusd ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Statusd"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/staytype/{id}": {
            "delete": {
                "description": "get staytype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a staytype entity by ID",
                "operationId": "delete-staytype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Staytype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/staytypes": {
            "get": {
                "description": "list staytype entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List staytype entities",
                "operationId": "list-staytype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Staytype"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create staytype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create staytype",
                "operationId": "create-staytype",
                "parameters": [
                    {
                        "description": "Staytype entity",
                        "name": "staytype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Staytype"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Staytype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/staytypes/{id}": {
            "get": {
                "description": "get staytype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a staytype entity by ID",
                "operationId": "get-staytype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Staytype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Staytype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/wifis": {
            "get": {
                "description": "list wifi entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List wifi entities",
                "operationId": "list-wifi",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Wifi"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create wifi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create wifi",
                "operationId": "create-wifi",
                "parameters": [
                    {
                        "description": "Wifi entity",
                        "name": "wifi",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Wifi"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Wifi"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/wifis/{id}": {
            "get": {
                "description": "get wifi by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a wifi entity by ID",
                "operationId": "get-wifi",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Wifi ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Wifi"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get wifi by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a wifi entity by ID",
                "operationId": "delete-wifi",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Wifi ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.Bill": {
            "type": "object",
            "properties": {
                "added": {
                    "type": "string"
                },
                "lease": {
                    "type": "integer"
                },
                "payment": {
                    "type": "integer"
                },
                "room": {
                    "type": "integer"
                },
                "situation": {
                    "type": "integer"
                },
                "taxpayer": {
                    "type": "string"
                },
                "tell": {
                    "type": "string"
                },
                "total": {
                    "type": "string"
                }
            }
        },
        "controllers.Cleaningroom": {
            "type": "object",
            "properties": {
                "cleanername": {
                    "type": "integer"
                },
                "dateandstarttime": {
                    "type": "string"
                },
                "employee": {
                    "type": "integer"
                },
                "lengthtime": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "numofem": {
                    "type": "integer"
                },
                "phonenumber": {
                    "type": "string"
                },
                "roomdetail": {
                    "type": "integer"
                }
            }
        },
        "controllers.Deposit": {
            "type": "object",
            "properties": {
                "added": {
                    "type": "string"
                },
                "depositor": {
                    "type": "string"
                },
                "depositortell": {
                    "type": "string"
                },
                "employee": {
                    "type": "integer"
                },
                "info": {
                    "type": "string"
                },
                "lease": {
                    "type": "integer"
                },
                "parcelcode": {
                    "type": "string"
                },
                "recipienttell": {
                    "type": "string"
                },
                "statusd": {
                    "type": "integer"
                }
            }
        },
        "controllers.Lease": {
            "type": "object",
            "properties": {
                "added": {
                    "type": "string"
                },
                "agetenant": {
                    "type": "integer"
                },
                "employee": {
                    "type": "integer"
                },
                "idtenant": {
                    "type": "string"
                },
                "numbtenant": {
                    "type": "string"
                },
                "roomdetail": {
                    "type": "integer"
                },
                "tenant": {
                    "type": "string"
                },
                "wifi": {
                    "type": "integer"
                }
            }
        },
        "controllers.Repairinvoice": {
            "type": "object",
            "properties": {
                "bequipment": {
                    "type": "string"
                },
                "employee": {
                    "type": "integer"
                },
                "rentalstatus": {
                    "type": "integer"
                }
            }
        },
        "controllers.Roomdetail": {
            "type": "object",
            "properties": {
                "bed": {
                    "type": "integer"
                },
                "bedtype": {
                    "type": "integer"
                },
                "employee": {
                    "type": "integer"
                },
                "petrule": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "pledge": {
                    "type": "integer"
                },
                "roomnumber": {
                    "type": "string"
                },
                "roomprice": {
                    "type": "integer"
                },
                "roomtypename": {
                    "type": "string"
                },
                "sleep": {
                    "type": "integer"
                },
                "staytype": {
                    "type": "integer"
                }
            }
        },
        "ent.Bedtype": {
            "type": "object",
            "properties": {
                "bedtypename": {
                    "description": "Bedtypename holds the value of the \"bedtypename\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the BedtypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.BedtypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.BedtypeEdges": {
            "type": "object",
            "properties": {
                "roomdetails": {
                    "description": "Roomdetails holds the value of the roomdetails edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Roomdetail"
                    }
                }
            }
        },
        "ent.Bill": {
            "type": "object",
            "properties": {
                "addedtime": {
                    "description": "Addedtime holds the value of the \"addedtime\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the BillQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.BillEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "taxpayer": {
                    "description": "Taxpayer holds the value of the \"taxpayer\" field.",
                    "type": "string"
                },
                "tell": {
                    "description": "Tell holds the value of the \"tell\" field.",
                    "type": "string"
                },
                "total": {
                    "description": "Total holds the value of the \"total\" field.",
                    "type": "string"
                }
            }
        },
        "ent.BillEdges": {
            "type": "object",
            "properties": {
                "lease": {
                    "description": "Lease holds the value of the Lease edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Lease"
                },
                "payment": {
                    "description": "Payment holds the value of the Payment edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Payment"
                },
                "situation": {
                    "description": "Situation holds the value of the Situation edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Situation"
                }
            }
        },
        "ent.Cleanername": {
            "type": "object",
            "properties": {
                "cleanername": {
                    "description": "Cleanername holds the value of the \"cleanername\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CleanernameQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CleanernameEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.CleanernameEdges": {
            "type": "object",
            "properties": {
                "cleaningrooms": {
                    "description": "Cleaningrooms holds the value of the cleaningrooms edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Cleaningroom"
                    }
                }
            }
        },
        "ent.Cleaningroom": {
            "type": "object",
            "properties": {
                "dateandstarttime": {
                    "description": "Dateandstarttime holds the value of the \"dateandstarttime\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CleaningroomQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CleaningroomEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "note": {
                    "description": "Note holds the value of the \"note\" field.",
                    "type": "string"
                },
                "numofem": {
                    "description": "Numofem holds the value of the \"numofem\" field.",
                    "type": "integer"
                },
                "phonenumber": {
                    "description": "Phonenumber holds the value of the \"phonenumber\" field.",
                    "type": "string"
                }
            }
        },
        "ent.CleaningroomEdges": {
            "type": "object",
            "properties": {
                "cleanername": {
                    "description": "Cleanername holds the value of the Cleanername edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Cleanername"
                },
                "employee": {
                    "description": "Employee holds the value of the Employee edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Employee"
                },
                "lengthtime": {
                    "description": "Lengthtime holds the value of the Lengthtime edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Lengthtime"
                },
                "roomdetail": {
                    "description": "Roomdetail holds the value of the roomdetail edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Roomdetail"
                }
            }
        },
        "ent.Deposit": {
            "type": "object",
            "properties": {
                "addedtime": {
                    "description": "Addedtime holds the value of the \"addedtime\" field.",
                    "type": "string"
                },
                "depositor": {
                    "description": "Depositor holds the value of the \"depositor\" field.",
                    "type": "string"
                },
                "depositortell": {
                    "description": "Depositortell holds the value of the \"depositortell\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DepositQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DepositEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "info": {
                    "description": "Info holds the value of the \"info\" field.",
                    "type": "string"
                },
                "parcelcode": {
                    "description": "Parcelcode holds the value of the \"parcelcode\" field.",
                    "type": "string"
                },
                "recipienttell": {
                    "description": "Recipienttell holds the value of the \"recipienttell\" field.",
                    "type": "string"
                }
            }
        },
        "ent.DepositEdges": {
            "type": "object",
            "properties": {
                "employee": {
                    "description": "Employee holds the value of the Employee edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Employee"
                },
                "lease": {
                    "description": "Lease holds the value of the Lease edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Lease"
                },
                "statusd": {
                    "description": "Statusd holds the value of the Statusd edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Statusd"
                }
            }
        },
        "ent.Employee": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the EmployeeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.EmployeeEdges"
                },
                "email": {
                    "description": "Email holds the value of the \"email\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "password": {
                    "description": "Password holds the value of the \"password\" field.",
                    "type": "string"
                }
            }
        },
        "ent.EmployeeEdges": {
            "type": "object",
            "properties": {
                "cleaningrooms": {
                    "description": "Cleaningrooms holds the value of the cleaningrooms edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Cleaningroom"
                    }
                },
                "employees": {
                    "description": "Employees holds the value of the employees edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Deposit"
                    }
                },
                "jobposition": {
                    "description": "Jobposition holds the value of the jobposition edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Jobposition"
                },
                "leasess": {
                    "description": "Leasess holds the value of the leasess edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Lease"
                    }
                },
                "repairinvoices": {
                    "description": "Repairinvoices holds the value of the repairinvoices edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Repairinvoice"
                    }
                },
                "roomdetails": {
                    "description": "Roomdetails holds the value of the roomdetails edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Roomdetail"
                    }
                }
            }
        },
        "ent.Jobposition": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the JobpositionQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.JobpositionEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "positionname": {
                    "description": "Positionname holds the value of the \"positionname\" field.",
                    "type": "string"
                }
            }
        },
        "ent.JobpositionEdges": {
            "type": "object",
            "properties": {
                "employees": {
                    "description": "Employees holds the value of the employees edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Employee"
                    }
                },
                "roomdetails": {
                    "description": "Roomdetails holds the value of the roomdetails edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Roomdetail"
                    }
                }
            }
        },
        "ent.Lease": {
            "type": "object",
            "properties": {
                "addedtime": {
                    "description": "Addedtime holds the value of the \"addedtime\" field.",
                    "type": "string"
                },
                "agetenant": {
                    "description": "Agetenant holds the value of the \"agetenant\" field.",
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the LeaseQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.LeaseEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "idtenant": {
                    "description": "Idtenant holds the value of the \"idtenant\" field.",
                    "type": "string"
                },
                "numbtenant": {
                    "description": "Numbtenant holds the value of the \"numbtenant\" field.",
                    "type": "string"
                },
                "tenant": {
                    "description": "Tenant holds the value of the \"tenant\" field.",
                    "type": "string"
                }
            }
        },
        "ent.LeaseEdges": {
            "type": "object",
            "properties": {
                "bill": {
                    "description": "Bill holds the value of the bill edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Bill"
                    }
                },
                "employee": {
                    "description": "Employee holds the value of the employee edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Employee"
                },
                "leases": {
                    "description": "Leases holds the value of the leases edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Deposit"
                    }
                },
                "roomdetail": {
                    "description": "Roomdetail holds the value of the Roomdetail edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Roomdetail"
                },
                "wifi": {
                    "description": "Wifi holds the value of the Wifi edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Wifi"
                }
            }
        },
        "ent.Lengthtime": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the LengthtimeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.LengthtimeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "lengthtime": {
                    "description": "Lengthtime holds the value of the \"lengthtime\" field.",
                    "type": "string"
                }
            }
        },
        "ent.LengthtimeEdges": {
            "type": "object",
            "properties": {
                "cleaningrooms": {
                    "description": "Cleaningrooms holds the value of the cleaningrooms edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Cleaningroom"
                    }
                }
            }
        },
        "ent.Payment": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PaymentQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PaymentEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "paymentname": {
                    "description": "Paymentname holds the value of the \"paymentname\" field.",
                    "type": "string"
                }
            }
        },
        "ent.PaymentEdges": {
            "type": "object",
            "properties": {
                "payments": {
                    "description": "Payments holds the value of the payments edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Bill"
                    }
                }
            }
        },
        "ent.Petrule": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PetruleQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PetruleEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "petrule": {
                    "description": "Petrule holds the value of the \"petrule\" field.",
                    "type": "string"
                }
            }
        },
        "ent.PetruleEdges": {
            "type": "object",
            "properties": {
                "roomdetails": {
                    "description": "Roomdetails holds the value of the roomdetails edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Roomdetail"
                    }
                }
            }
        },
        "ent.Pledge": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PledgeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PledgeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "provision": {
                    "description": "Provision holds the value of the \"provision\" field.",
                    "type": "string"
                }
            }
        },
        "ent.PledgeEdges": {
            "type": "object",
            "properties": {
                "roomdetails": {
                    "description": "Roomdetails holds the value of the roomdetails edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Roomdetail"
                    }
                }
            }
        },
        "ent.Rentalstatus": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RentalstatusQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.RentalstatusEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "rentalstatus": {
                    "description": "Rentalstatus holds the value of the \"rentalstatus\" field.",
                    "type": "string"
                }
            }
        },
        "ent.RentalstatusEdges": {
            "type": "object",
            "properties": {
                "repairinvoices": {
                    "description": "Repairinvoices holds the value of the repairinvoices edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Repairinvoice"
                    }
                }
            }
        },
        "ent.Repairinvoice": {
            "type": "object",
            "properties": {
                "bequipment": {
                    "description": "Bequipment holds the value of the \"bequipment\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RepairinvoiceQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.RepairinvoiceEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.RepairinvoiceEdges": {
            "type": "object",
            "properties": {
                "employee": {
                    "description": "Employee holds the value of the employee edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Employee"
                },
                "rentalstatus": {
                    "description": "Rentalstatus holds the value of the Rentalstatus edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Rentalstatus"
                }
            }
        },
        "ent.Roomdetail": {
            "type": "object",
            "properties": {
                "bed": {
                    "description": "Bed holds the value of the \"bed\" field.",
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RoomdetailQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.RoomdetailEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "phone": {
                    "description": "Phone holds the value of the \"phone\" field.",
                    "type": "string"
                },
                "roomnumber": {
                    "description": "Roomnumber holds the value of the \"roomnumber\" field.",
                    "type": "string"
                },
                "roomprice": {
                    "description": "Roomprice holds the value of the \"roomprice\" field.",
                    "type": "integer"
                },
                "roomtypename": {
                    "description": "Roomtypename holds the value of the \"roomtypename\" field.",
                    "type": "string"
                },
                "sleep": {
                    "description": "Sleep holds the value of the \"sleep\" field.",
                    "type": "integer"
                }
            }
        },
        "ent.RoomdetailEdges": {
            "type": "object",
            "properties": {
                "bedtype": {
                    "description": "Bedtype holds the value of the bedtype edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Bedtype"
                },
                "cleaningrooms": {
                    "description": "Cleaningrooms holds the value of the cleaningrooms edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Cleaningroom"
                    }
                },
                "employee": {
                    "description": "Employee holds the value of the employee edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Employee"
                },
                "jobposition": {
                    "description": "Jobposition holds the value of the jobposition edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Jobposition"
                },
                "petrule": {
                    "description": "Petrule holds the value of the petrule edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Petrule"
                },
                "pledge": {
                    "description": "Pledge holds the value of the pledge edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Pledge"
                },
                "roomdetails": {
                    "description": "Roomdetails holds the value of the roomdetails edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Lease"
                },
                "staytype": {
                    "description": "Staytype holds the value of the staytype edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Staytype"
                }
            }
        },
        "ent.Situation": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the SituationQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.SituationEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "situationname": {
                    "description": "Situationname holds the value of the \"situationname\" field.",
                    "type": "string"
                }
            }
        },
        "ent.SituationEdges": {
            "type": "object",
            "properties": {
                "situations": {
                    "description": "Situations holds the value of the situations edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Bill"
                    }
                }
            }
        },
        "ent.Statusd": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the StatusdQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.StatusdEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "statusdname": {
                    "description": "Statusdname holds the value of the \"statusdname\" field.",
                    "type": "string"
                }
            }
        },
        "ent.StatusdEdges": {
            "type": "object",
            "properties": {
                "statusds": {
                    "description": "Statusds holds the value of the statusds edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Deposit"
                    }
                }
            }
        },
        "ent.Staytype": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the StaytypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.StaytypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "staytype": {
                    "description": "Staytype holds the value of the \"staytype\" field.",
                    "type": "string"
                }
            }
        },
        "ent.StaytypeEdges": {
            "type": "object",
            "properties": {
                "roomdetails": {
                    "description": "Roomdetails holds the value of the roomdetails edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Roomdetail"
                    }
                }
            }
        },
        "ent.Wifi": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the WifiQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.WifiEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "wifiname": {
                    "description": "Wifiname holds the value of the \"wifiname\" field.",
                    "type": "string"
                }
            }
        },
        "ent.WifiEdges": {
            "type": "object",
            "properties": {
                "wifis": {
                    "description": "Wifis holds the value of the wifis edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Lease"
                    }
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "SUT SA Example API",
	Description: "This is a sample server for SUT SE 2563",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
