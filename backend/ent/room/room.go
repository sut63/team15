// Code generated by entc, DO NOT EDIT.

package room

const (
	// Label holds the string label denoting the room type in the database.
	Label = "room"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRoomprice holds the string denoting the roomprice field in the database.
	FieldRoomprice = "roomprice"
	// FieldRoomtypename holds the string denoting the roomtypename field in the database.
	FieldRoomtypename = "roomtypename"

	// EdgeQuantity holds the string denoting the quantity edge name in mutations.
	EdgeQuantity = "quantity"
	// EdgeStaytype holds the string denoting the staytype edge name in mutations.
	EdgeStaytype = "staytype"
	// EdgeFacilities holds the string denoting the facilities edge name in mutations.
	EdgeFacilities = "facilities"
	// EdgeEquipments holds the string denoting the equipments edge name in mutations.
	EdgeEquipments = "equipments"
	// EdgeNearbyplace holds the string denoting the nearbyplace edge name in mutations.
	EdgeNearbyplace = "nearbyplace"
	// EdgeCleaningrooms holds the string denoting the cleaningrooms edge name in mutations.
	EdgeCleaningrooms = "cleaningrooms"

	// Table holds the table name of the room in the database.
	Table = "rooms"
	// QuantityTable is the table the holds the quantity relation/edge.
	QuantityTable = "rooms"
	// QuantityInverseTable is the table name for the Quantity entity.
	// It exists in this package in order to avoid circular dependency with the "quantity" package.
	QuantityInverseTable = "quantities"
	// QuantityColumn is the table column denoting the quantity relation/edge.
	QuantityColumn = "room_quantity"
	// StaytypeTable is the table the holds the staytype relation/edge.
	StaytypeTable = "rooms"
	// StaytypeInverseTable is the table name for the StayType entity.
	// It exists in this package in order to avoid circular dependency with the "staytype" package.
	StaytypeInverseTable = "stay_types"
	// StaytypeColumn is the table column denoting the staytype relation/edge.
	StaytypeColumn = "room_staytype"
	// FacilitiesTable is the table the holds the facilities relation/edge. The primary key declared below.
	FacilitiesTable = "room_facilities"
	// FacilitiesInverseTable is the table name for the Facility entity.
	// It exists in this package in order to avoid circular dependency with the "facility" package.
	FacilitiesInverseTable = "facilities"
	// EquipmentsTable is the table the holds the equipments relation/edge. The primary key declared below.
	EquipmentsTable = "room_equipments"
	// EquipmentsInverseTable is the table name for the Equipment entity.
	// It exists in this package in order to avoid circular dependency with the "equipment" package.
	EquipmentsInverseTable = "equipment"
	// NearbyplaceTable is the table the holds the nearbyplace relation/edge. The primary key declared below.
	NearbyplaceTable = "room_nearbyplace"
	// NearbyplaceInverseTable is the table name for the NearbyPlace entity.
	// It exists in this package in order to avoid circular dependency with the "nearbyplace" package.
	NearbyplaceInverseTable = "nearby_places"
	// CleaningroomsTable is the table the holds the cleaningrooms relation/edge.
	CleaningroomsTable = "cleaning_rooms"
	// CleaningroomsInverseTable is the table name for the CleaningRoom entity.
	// It exists in this package in order to avoid circular dependency with the "cleaningroom" package.
	CleaningroomsInverseTable = "cleaning_rooms"
	// CleaningroomsColumn is the table column denoting the cleaningrooms relation/edge.
	CleaningroomsColumn = "room_cleaningrooms"
)

// Columns holds all SQL columns for room fields.
var Columns = []string{
	FieldID,
	FieldRoomprice,
	FieldRoomtypename,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Room type.
var ForeignKeys = []string{
	"room_quantity",
	"room_staytype",
}

var (
	// FacilitiesPrimaryKey and FacilitiesColumn2 are the table columns denoting the
	// primary key for the facilities relation (M2M).
	FacilitiesPrimaryKey = []string{"room_id", "facility_id"}
	// EquipmentsPrimaryKey and EquipmentsColumn2 are the table columns denoting the
	// primary key for the equipments relation (M2M).
	EquipmentsPrimaryKey = []string{"room_id", "equipment_id"}
	// NearbyplacePrimaryKey and NearbyplaceColumn2 are the table columns denoting the
	// primary key for the nearbyplace relation (M2M).
	NearbyplacePrimaryKey = []string{"room_id", "nearby_place_id"}
)

var (
	// RoompriceValidator is a validator for the "roomprice" field. It is called by the builders before save.
	RoompriceValidator func(int) error
)
