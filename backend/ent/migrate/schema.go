// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// CleanerNamesColumns holds the columns for the "cleaner_names" table.
	CleanerNamesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "cleanername", Type: field.TypeString, Unique: true},
	}
	// CleanerNamesTable holds the schema information for the "cleaner_names" table.
	CleanerNamesTable = &schema.Table{
		Name:        "cleaner_names",
		Columns:     CleanerNamesColumns,
		PrimaryKey:  []*schema.Column{CleanerNamesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CleaningRoomsColumns holds the columns for the "cleaning_rooms" table.
	CleaningRoomsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "dateandstarttime", Type: field.TypeTime},
		{Name: "note", Type: field.TypeString},
		{Name: "cleanerroom_id", Type: field.TypeInt, Nullable: true},
		{Name: "lengthtime_id", Type: field.TypeInt, Nullable: true},
	}
	// CleaningRoomsTable holds the schema information for the "cleaning_rooms" table.
	CleaningRoomsTable = &schema.Table{
		Name:       "cleaning_rooms",
		Columns:    CleaningRoomsColumns,
		PrimaryKey: []*schema.Column{CleaningRoomsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "cleaning_rooms_cleaner_names_cleaningrooms",
				Columns: []*schema.Column{CleaningRoomsColumns[3]},

				RefColumns: []*schema.Column{CleanerNamesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "cleaning_rooms_length_times_cleaningrooms",
				Columns: []*schema.Column{CleaningRoomsColumns[4]},

				RefColumns: []*schema.Column{LengthTimesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DepositsColumns holds the columns for the "deposits" table.
	DepositsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "addedtime", Type: field.TypeTime},
		{Name: "info", Type: field.TypeString},
		{Name: "employee_id", Type: field.TypeInt, Nullable: true},
		{Name: "statusd_id", Type: field.TypeInt, Nullable: true},
	}
	// DepositsTable holds the schema information for the "deposits" table.
	DepositsTable = &schema.Table{
		Name:       "deposits",
		Columns:    DepositsColumns,
		PrimaryKey: []*schema.Column{DepositsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "deposits_employees_employees",
				Columns: []*schema.Column{DepositsColumns[3]},

				RefColumns: []*schema.Column{EmployeesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "deposits_statusds_statusds",
				Columns: []*schema.Column{DepositsColumns[4]},

				RefColumns: []*schema.Column{StatusdsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EmployeesColumns holds the columns for the "employees" table.
	EmployeesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "email", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "jobposition_id", Type: field.TypeInt, Nullable: true},
	}
	// EmployeesTable holds the schema information for the "employees" table.
	EmployeesTable = &schema.Table{
		Name:       "employees",
		Columns:    EmployeesColumns,
		PrimaryKey: []*schema.Column{EmployeesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "employees_jobpositions_employees",
				Columns: []*schema.Column{EmployeesColumns[4]},

				RefColumns: []*schema.Column{JobpositionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EquipmentColumns holds the columns for the "equipment" table.
	EquipmentColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "equipment", Type: field.TypeString, Unique: true},
	}
	// EquipmentTable holds the schema information for the "equipment" table.
	EquipmentTable = &schema.Table{
		Name:        "equipment",
		Columns:     EquipmentColumns,
		PrimaryKey:  []*schema.Column{EquipmentColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// FacilitiesColumns holds the columns for the "facilities" table.
	FacilitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "facilitie", Type: field.TypeString, Unique: true},
	}
	// FacilitiesTable holds the schema information for the "facilities" table.
	FacilitiesTable = &schema.Table{
		Name:        "facilities",
		Columns:     FacilitiesColumns,
		PrimaryKey:  []*schema.Column{FacilitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// JobpositionsColumns holds the columns for the "jobpositions" table.
	JobpositionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "position_name", Type: field.TypeString, Unique: true},
	}
	// JobpositionsTable holds the schema information for the "jobpositions" table.
	JobpositionsTable = &schema.Table{
		Name:        "jobpositions",
		Columns:     JobpositionsColumns,
		PrimaryKey:  []*schema.Column{JobpositionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// LeasesColumns holds the columns for the "leases" table.
	LeasesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "addedtime", Type: field.TypeTime},
		{Name: "lease", Type: field.TypeString},
		{Name: "room_num", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "wifi_id", Type: field.TypeInt, Nullable: true},
	}
	// LeasesTable holds the schema information for the "leases" table.
	LeasesTable = &schema.Table{
		Name:       "leases",
		Columns:    LeasesColumns,
		PrimaryKey: []*schema.Column{LeasesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "leases_roomdetails_roomdetails",
				Columns: []*schema.Column{LeasesColumns[3]},

				RefColumns: []*schema.Column{RoomdetailsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "leases_wifis_wifis",
				Columns: []*schema.Column{LeasesColumns[4]},

				RefColumns: []*schema.Column{WifisColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// LengthTimesColumns holds the columns for the "length_times" table.
	LengthTimesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "lengthtime", Type: field.TypeString, Unique: true},
	}
	// LengthTimesTable holds the schema information for the "length_times" table.
	LengthTimesTable = &schema.Table{
		Name:        "length_times",
		Columns:     LengthTimesColumns,
		PrimaryKey:  []*schema.Column{LengthTimesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// NearbyplacesColumns holds the columns for the "nearbyplaces" table.
	NearbyplacesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "nearbyplace", Type: field.TypeString, Unique: true},
	}
	// NearbyplacesTable holds the schema information for the "nearbyplaces" table.
	NearbyplacesTable = &schema.Table{
		Name:        "nearbyplaces",
		Columns:     NearbyplacesColumns,
		PrimaryKey:  []*schema.Column{NearbyplacesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// QuantitiesColumns holds the columns for the "quantities" table.
	QuantitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "quantity", Type: field.TypeString, Unique: true},
	}
	// QuantitiesTable holds the schema information for the "quantities" table.
	QuantitiesTable = &schema.Table{
		Name:        "quantities",
		Columns:     QuantitiesColumns,
		PrimaryKey:  []*schema.Column{QuantitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RentalstatusesColumns holds the columns for the "rentalstatuses" table.
	RentalstatusesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "rentalstatus", Type: field.TypeString, Unique: true},
	}
	// RentalstatusesTable holds the schema information for the "rentalstatuses" table.
	RentalstatusesTable = &schema.Table{
		Name:        "rentalstatuses",
		Columns:     RentalstatusesColumns,
		PrimaryKey:  []*schema.Column{RentalstatusesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RepairinvoicesColumns holds the columns for the "repairinvoices" table.
	RepairinvoicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "bequipment", Type: field.TypeString},
		{Name: "employee_id", Type: field.TypeInt, Nullable: true},
		{Name: "rentalstatus_repairinvoices", Type: field.TypeInt, Nullable: true},
	}
	// RepairinvoicesTable holds the schema information for the "repairinvoices" table.
	RepairinvoicesTable = &schema.Table{
		Name:       "repairinvoices",
		Columns:    RepairinvoicesColumns,
		PrimaryKey: []*schema.Column{RepairinvoicesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "repairinvoices_employees_repairinvoices",
				Columns: []*schema.Column{RepairinvoicesColumns[2]},

				RefColumns: []*schema.Column{EmployeesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "repairinvoices_rentalstatuses_repairinvoices",
				Columns: []*schema.Column{RepairinvoicesColumns[3]},

				RefColumns: []*schema.Column{RentalstatusesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RoomdetailsColumns holds the columns for the "roomdetails" table.
	RoomdetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "roomtypename", Type: field.TypeString, Unique: true},
		{Name: "roomprice", Type: field.TypeString},
		{Name: "employee_id", Type: field.TypeInt, Nullable: true},
		{Name: "equipment_roomdetail", Type: field.TypeInt, Nullable: true},
		{Name: "facilitie_roomdetail", Type: field.TypeInt, Nullable: true},
		{Name: "nearbyplace_roomdetail", Type: field.TypeInt, Nullable: true},
		{Name: "quantity_roomdetails", Type: field.TypeInt, Nullable: true},
		{Name: "staytype_roomdetails", Type: field.TypeInt, Nullable: true},
	}
	// RoomdetailsTable holds the schema information for the "roomdetails" table.
	RoomdetailsTable = &schema.Table{
		Name:       "roomdetails",
		Columns:    RoomdetailsColumns,
		PrimaryKey: []*schema.Column{RoomdetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "roomdetails_employees_roomdetails",
				Columns: []*schema.Column{RoomdetailsColumns[3]},

				RefColumns: []*schema.Column{EmployeesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "roomdetails_equipment_roomdetail",
				Columns: []*schema.Column{RoomdetailsColumns[4]},

				RefColumns: []*schema.Column{EquipmentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "roomdetails_facilities_roomdetail",
				Columns: []*schema.Column{RoomdetailsColumns[5]},

				RefColumns: []*schema.Column{FacilitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "roomdetails_nearbyplaces_roomdetail",
				Columns: []*schema.Column{RoomdetailsColumns[6]},

				RefColumns: []*schema.Column{NearbyplacesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "roomdetails_quantities_roomdetails",
				Columns: []*schema.Column{RoomdetailsColumns[7]},

				RefColumns: []*schema.Column{QuantitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "roomdetails_staytypes_roomdetails",
				Columns: []*schema.Column{RoomdetailsColumns[8]},

				RefColumns: []*schema.Column{StaytypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StatusdsColumns holds the columns for the "statusds" table.
	StatusdsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "statusdname", Type: field.TypeString, Unique: true},
	}
	// StatusdsTable holds the schema information for the "statusds" table.
	StatusdsTable = &schema.Table{
		Name:        "statusds",
		Columns:     StatusdsColumns,
		PrimaryKey:  []*schema.Column{StatusdsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// StaytypesColumns holds the columns for the "staytypes" table.
	StaytypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "staytype", Type: field.TypeString, Unique: true},
	}
	// StaytypesTable holds the schema information for the "staytypes" table.
	StaytypesTable = &schema.Table{
		Name:        "staytypes",
		Columns:     StaytypesColumns,
		PrimaryKey:  []*schema.Column{StaytypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// WifisColumns holds the columns for the "wifis" table.
	WifisColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "wifiname", Type: field.TypeString, Unique: true},
	}
	// WifisTable holds the schema information for the "wifis" table.
	WifisTable = &schema.Table{
		Name:        "wifis",
		Columns:     WifisColumns,
		PrimaryKey:  []*schema.Column{WifisColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CleanerNamesTable,
		CleaningRoomsTable,
		DepositsTable,
		EmployeesTable,
		EquipmentTable,
		FacilitiesTable,
		JobpositionsTable,
		LeasesTable,
		LengthTimesTable,
		NearbyplacesTable,
		QuantitiesTable,
		RentalstatusesTable,
		RepairinvoicesTable,
		RoomdetailsTable,
		StatusdsTable,
		StaytypesTable,
		WifisTable,
	}
)

func init() {
	CleaningRoomsTable.ForeignKeys[0].RefTable = CleanerNamesTable
	CleaningRoomsTable.ForeignKeys[1].RefTable = LengthTimesTable
	DepositsTable.ForeignKeys[0].RefTable = EmployeesTable
	DepositsTable.ForeignKeys[1].RefTable = StatusdsTable
	EmployeesTable.ForeignKeys[0].RefTable = JobpositionsTable
	LeasesTable.ForeignKeys[0].RefTable = RoomdetailsTable
	LeasesTable.ForeignKeys[1].RefTable = WifisTable
	RepairinvoicesTable.ForeignKeys[0].RefTable = EmployeesTable
	RepairinvoicesTable.ForeignKeys[1].RefTable = RentalstatusesTable
	RoomdetailsTable.ForeignKeys[0].RefTable = EmployeesTable
	RoomdetailsTable.ForeignKeys[1].RefTable = EquipmentTable
	RoomdetailsTable.ForeignKeys[2].RefTable = FacilitiesTable
	RoomdetailsTable.ForeignKeys[3].RefTable = NearbyplacesTable
	RoomdetailsTable.ForeignKeys[4].RefTable = QuantitiesTable
	RoomdetailsTable.ForeignKeys[5].RefTable = StaytypesTable
}
