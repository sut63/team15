// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// CleanerNamesColumns holds the columns for the "cleaner_names" table.
	CleanerNamesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "cleanername", Type: field.TypeString, Unique: true},
	}
	// CleanerNamesTable holds the schema information for the "cleaner_names" table.
	CleanerNamesTable = &schema.Table{
		Name:        "cleaner_names",
		Columns:     CleanerNamesColumns,
		PrimaryKey:  []*schema.Column{CleanerNamesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CleaningRoomsColumns holds the columns for the "cleaning_rooms" table.
	CleaningRoomsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "dateandstarttime", Type: field.TypeTime},
		{Name: "note", Type: field.TypeString},
		{Name: "cleanerroom_id", Type: field.TypeInt, Nullable: true},
		{Name: "lengthtime_id", Type: field.TypeInt, Nullable: true},
	}
	// CleaningRoomsTable holds the schema information for the "cleaning_rooms" table.
	CleaningRoomsTable = &schema.Table{
		Name:       "cleaning_rooms",
		Columns:    CleaningRoomsColumns,
		PrimaryKey: []*schema.Column{CleaningRoomsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "cleaning_rooms_cleaner_names_cleaningrooms",
				Columns: []*schema.Column{CleaningRoomsColumns[3]},

				RefColumns: []*schema.Column{CleanerNamesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "cleaning_rooms_length_times_cleaningrooms",
				Columns: []*schema.Column{CleaningRoomsColumns[4]},

				RefColumns: []*schema.Column{LengthTimesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DepositsColumns holds the columns for the "deposits" table.
	DepositsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "addedtime", Type: field.TypeTime},
		{Name: "info", Type: field.TypeString},
		{Name: "employee_id", Type: field.TypeInt, Nullable: true},
		{Name: "statusd_id", Type: field.TypeInt, Nullable: true},
	}
	// DepositsTable holds the schema information for the "deposits" table.
	DepositsTable = &schema.Table{
		Name:       "deposits",
		Columns:    DepositsColumns,
		PrimaryKey: []*schema.Column{DepositsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "deposits_employees_employees",
				Columns: []*schema.Column{DepositsColumns[3]},

				RefColumns: []*schema.Column{EmployeesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "deposits_statusds_statusds",
				Columns: []*schema.Column{DepositsColumns[4]},

				RefColumns: []*schema.Column{StatusdsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EmployeesColumns holds the columns for the "employees" table.
	EmployeesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "employeename", Type: field.TypeString, Unique: true},
		{Name: "employeeemail", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
	}
	// EmployeesTable holds the schema information for the "employees" table.
	EmployeesTable = &schema.Table{
		Name:        "employees",
		Columns:     EmployeesColumns,
		PrimaryKey:  []*schema.Column{EmployeesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// LengthTimesColumns holds the columns for the "length_times" table.
	LengthTimesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "lengthtime", Type: field.TypeString, Unique: true},
	}
	// LengthTimesTable holds the schema information for the "length_times" table.
	LengthTimesTable = &schema.Table{
		Name:        "length_times",
		Columns:     LengthTimesColumns,
		PrimaryKey:  []*schema.Column{LengthTimesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// StatusdsColumns holds the columns for the "statusds" table.
	StatusdsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "statusdname", Type: field.TypeString, Unique: true},
	}
	// StatusdsTable holds the schema information for the "statusds" table.
	StatusdsTable = &schema.Table{
		Name:        "statusds",
		Columns:     StatusdsColumns,
		PrimaryKey:  []*schema.Column{StatusdsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CleanerNamesTable,
		CleaningRoomsTable,
		DepositsTable,
		EmployeesTable,
		LengthTimesTable,
		StatusdsTable,
	}
)

func init() {
	CleaningRoomsTable.ForeignKeys[0].RefTable = CleanerNamesTable
	CleaningRoomsTable.ForeignKeys[1].RefTable = LengthTimesTable
	DepositsTable.ForeignKeys[0].RefTable = EmployeesTable
	DepositsTable.ForeignKeys[1].RefTable = StatusdsTable
}
