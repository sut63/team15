// Code generated by entc, DO NOT EDIT.

package employee

const (
	// Label holds the string label denoting the employee type in the database.
	Label = "employee"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"

	// EdgeEmployees holds the string denoting the employees edge name in mutations.
	EdgeEmployees = "employees"
	// EdgeLeases holds the string denoting the leases edge name in mutations.
	EdgeLeases = "leases"
	// EdgeRoomdetails holds the string denoting the roomdetails edge name in mutations.
	EdgeRoomdetails = "roomdetails"
	// EdgeJobposition holds the string denoting the jobposition edge name in mutations.
	EdgeJobposition = "jobposition"
	// EdgeRepairinvoices holds the string denoting the repairinvoices edge name in mutations.
	EdgeRepairinvoices = "repairinvoices"

	// Table holds the table name of the employee in the database.
	Table = "employees"
	// EmployeesTable is the table the holds the employees relation/edge.
	EmployeesTable = "deposits"
	// EmployeesInverseTable is the table name for the Deposit entity.
	// It exists in this package in order to avoid circular dependency with the "deposit" package.
	EmployeesInverseTable = "deposits"
	// EmployeesColumn is the table column denoting the employees relation/edge.
	EmployeesColumn = "employee_id"
	// LeasesTable is the table the holds the leases relation/edge.
	LeasesTable = "leases"
	// LeasesInverseTable is the table name for the Lease entity.
	// It exists in this package in order to avoid circular dependency with the "lease" package.
	LeasesInverseTable = "leases"
	// LeasesColumn is the table column denoting the leases relation/edge.
	LeasesColumn = "employee_id"
	// RoomdetailsTable is the table the holds the roomdetails relation/edge.
	RoomdetailsTable = "roomdetails"
	// RoomdetailsInverseTable is the table name for the Roomdetail entity.
	// It exists in this package in order to avoid circular dependency with the "roomdetail" package.
	RoomdetailsInverseTable = "roomdetails"
	// RoomdetailsColumn is the table column denoting the roomdetails relation/edge.
	RoomdetailsColumn = "employee_id"
	// JobpositionTable is the table the holds the jobposition relation/edge.
	JobpositionTable = "employees"
	// JobpositionInverseTable is the table name for the Jobposition entity.
	// It exists in this package in order to avoid circular dependency with the "jobposition" package.
	JobpositionInverseTable = "jobpositions"
	// JobpositionColumn is the table column denoting the jobposition relation/edge.
	JobpositionColumn = "jobposition_employees"
	// RepairinvoicesTable is the table the holds the repairinvoices relation/edge.
	RepairinvoicesTable = "repairinvoices"
	// RepairinvoicesInverseTable is the table name for the Repairinvoice entity.
	// It exists in this package in order to avoid circular dependency with the "repairinvoice" package.
	RepairinvoicesInverseTable = "repairinvoices"
	// RepairinvoicesColumn is the table column denoting the repairinvoices relation/edge.
	RepairinvoicesColumn = "employee_id"
)

// Columns holds all SQL columns for employee fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldEmail,
	FieldPassword,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Employee type.
var ForeignKeys = []string{
	"jobposition_employees",
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// EmailValidator is a validator for the "email" field. It is called by the builders before save.
	EmailValidator func(string) error
	// PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	PasswordValidator func(string) error
)
