// Code generated by entc, DO NOT EDIT.

package bill

const (
	// Label holds the string label denoting the bill type in the database.
	Label = "bill"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAddedtime holds the string denoting the addedtime field in the database.
	FieldAddedtime = "addedtime"
	// FieldTell holds the string denoting the tell field in the database.
	FieldTell = "tell"
	// FieldTaxpayer holds the string denoting the taxpayer field in the database.
	FieldTaxpayer = "taxpayer"
	// FieldTotal holds the string denoting the total field in the database.
	FieldTotal = "total"

	// EdgeSituation holds the string denoting the situation edge name in mutations.
	EdgeSituation = "Situation"
	// EdgePayment holds the string denoting the payment edge name in mutations.
	EdgePayment = "Payment"
	// EdgeLease holds the string denoting the lease edge name in mutations.
	EdgeLease = "Lease"

	// Table holds the table name of the bill in the database.
	Table = "bills"
	// SituationTable is the table the holds the Situation relation/edge.
	SituationTable = "bills"
	// SituationInverseTable is the table name for the Situation entity.
	// It exists in this package in order to avoid circular dependency with the "situation" package.
	SituationInverseTable = "situations"
	// SituationColumn is the table column denoting the Situation relation/edge.
	SituationColumn = "situation_id"
	// PaymentTable is the table the holds the Payment relation/edge.
	PaymentTable = "bills"
	// PaymentInverseTable is the table name for the Payment entity.
	// It exists in this package in order to avoid circular dependency with the "payment" package.
	PaymentInverseTable = "payments"
	// PaymentColumn is the table column denoting the Payment relation/edge.
	PaymentColumn = "payment_id"
	// LeaseTable is the table the holds the Lease relation/edge.
	LeaseTable = "bills"
	// LeaseInverseTable is the table name for the Lease entity.
	// It exists in this package in order to avoid circular dependency with the "lease" package.
	LeaseInverseTable = "leases"
	// LeaseColumn is the table column denoting the Lease relation/edge.
	LeaseColumn = "lease_id"
)

// Columns holds all SQL columns for bill fields.
var Columns = []string{
	FieldID,
	FieldAddedtime,
	FieldTell,
	FieldTaxpayer,
	FieldTotal,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Bill type.
var ForeignKeys = []string{
	"lease_id",
	"payment_id",
	"situation_id",
}

var (
	// TellValidator is a validator for the "tell" field. It is called by the builders before save.
	TellValidator func(string) error
	// TaxpayerValidator is a validator for the "taxpayer" field. It is called by the builders before save.
	TaxpayerValidator func(string) error
	// TotalValidator is a validator for the "total" field. It is called by the builders before save.
	TotalValidator func(string) error
)
