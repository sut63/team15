/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntBedtype,
    EntBedtypeFromJSON,
    EntBedtypeFromJSONTyped,
    EntBedtypeToJSON,
    EntCleaningRoom,
    EntCleaningRoomFromJSON,
    EntCleaningRoomFromJSONTyped,
    EntCleaningRoomToJSON,
    EntEmployee,
    EntEmployeeFromJSON,
    EntEmployeeFromJSONTyped,
    EntEmployeeToJSON,
    EntJobposition,
    EntJobpositionFromJSON,
    EntJobpositionFromJSONTyped,
    EntJobpositionToJSON,
    EntLease,
    EntLeaseFromJSON,
    EntLeaseFromJSONTyped,
    EntLeaseToJSON,
    EntPetrule,
    EntPetruleFromJSON,
    EntPetruleFromJSONTyped,
    EntPetruleToJSON,
    EntPledge,
    EntPledgeFromJSON,
    EntPledgeFromJSONTyped,
    EntPledgeToJSON,
    EntStaytype,
    EntStaytypeFromJSON,
    EntStaytypeFromJSONTyped,
    EntStaytypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntRoomdetailEdges
 */
export interface EntRoomdetailEdges {
    /**
     * 
     * @type {EntBedtype}
     * @memberof EntRoomdetailEdges
     */
    bedtype?: EntBedtype;
    /**
     * Cleaningrooms holds the value of the cleaningrooms edge.
     * @type {Array<EntCleaningRoom>}
     * @memberof EntRoomdetailEdges
     */
    cleaningrooms?: Array<EntCleaningRoom>;
    /**
     * 
     * @type {EntEmployee}
     * @memberof EntRoomdetailEdges
     */
    employee?: EntEmployee;
    /**
     * 
     * @type {EntJobposition}
     * @memberof EntRoomdetailEdges
     */
    jobposition?: EntJobposition;
    /**
     * 
     * @type {EntPetrule}
     * @memberof EntRoomdetailEdges
     */
    petrule?: EntPetrule;
    /**
     * 
     * @type {EntPledge}
     * @memberof EntRoomdetailEdges
     */
    pledge?: EntPledge;
    /**
     * 
     * @type {EntLease}
     * @memberof EntRoomdetailEdges
     */
    roomdetails?: EntLease;
    /**
     * 
     * @type {EntStaytype}
     * @memberof EntRoomdetailEdges
     */
    staytype?: EntStaytype;
}

export function EntRoomdetailEdgesFromJSON(json: any): EntRoomdetailEdges {
    return EntRoomdetailEdgesFromJSONTyped(json, false);
}

export function EntRoomdetailEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntRoomdetailEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bedtype': !exists(json, 'bedtype') ? undefined : EntBedtypeFromJSON(json['bedtype']),
        'cleaningrooms': !exists(json, 'cleaningrooms') ? undefined : ((json['cleaningrooms'] as Array<any>).map(EntCleaningRoomFromJSON)),
        'employee': !exists(json, 'employee') ? undefined : EntEmployeeFromJSON(json['employee']),
        'jobposition': !exists(json, 'jobposition') ? undefined : EntJobpositionFromJSON(json['jobposition']),
        'petrule': !exists(json, 'petrule') ? undefined : EntPetruleFromJSON(json['petrule']),
        'pledge': !exists(json, 'pledge') ? undefined : EntPledgeFromJSON(json['pledge']),
        'roomdetails': !exists(json, 'roomdetails') ? undefined : EntLeaseFromJSON(json['roomdetails']),
        'staytype': !exists(json, 'staytype') ? undefined : EntStaytypeFromJSON(json['staytype']),
    };
}

export function EntRoomdetailEdgesToJSON(value?: EntRoomdetailEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bedtype': EntBedtypeToJSON(value.bedtype),
        'cleaningrooms': value.cleaningrooms === undefined ? undefined : ((value.cleaningrooms as Array<any>).map(EntCleaningRoomToJSON)),
        'employee': EntEmployeeToJSON(value.employee),
        'jobposition': EntJobpositionToJSON(value.jobposition),
        'petrule': EntPetruleToJSON(value.petrule),
        'pledge': EntPledgeToJSON(value.pledge),
        'roomdetails': EntLeaseToJSON(value.roomdetails),
        'staytype': EntStaytypeToJSON(value.staytype),
    };
}


