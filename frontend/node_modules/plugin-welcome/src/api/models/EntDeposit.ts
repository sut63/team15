/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntDepositEdges,
    EntDepositEdgesFromJSON,
    EntDepositEdgesFromJSONTyped,
    EntDepositEdgesToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntDeposit
 */
export interface EntDeposit {
    /**
     * Addedtime holds the value of the "addedtime" field.
     * @type {string}
     * @memberof EntDeposit
     */
    addedtime?: string;
    /**
     * Depositorname holds the value of the "depositorname" field.
     * @type {string}
     * @memberof EntDeposit
     */
    depositorname?: string;
    /**
     * Depositortell holds the value of the "depositortell" field.
     * @type {string}
     * @memberof EntDeposit
     */
    depositortell?: string;
    /**
     * 
     * @type {EntDepositEdges}
     * @memberof EntDeposit
     */
    edges?: EntDepositEdges;
    /**
     * ID of the ent.
     * @type {number}
     * @memberof EntDeposit
     */
    id?: number;
    /**
     * Info holds the value of the "info" field.
     * @type {string}
     * @memberof EntDeposit
     */
    info?: string;
    /**
     * Parcelcode holds the value of the "parcelcode" field.
     * @type {string}
     * @memberof EntDeposit
     */
    parcelcode?: string;
    /**
     * Recipienttell holds the value of the "recipienttell" field.
     * @type {string}
     * @memberof EntDeposit
     */
    recipienttell?: string;
}

export function EntDepositFromJSON(json: any): EntDeposit {
    return EntDepositFromJSONTyped(json, false);
}

export function EntDepositFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntDeposit {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'addedtime': !exists(json, 'addedtime') ? undefined : json['addedtime'],
        'depositorname': !exists(json, 'depositorname') ? undefined : json['depositorname'],
        'depositortell': !exists(json, 'depositortell') ? undefined : json['depositortell'],
        'edges': !exists(json, 'edges') ? undefined : EntDepositEdgesFromJSON(json['edges']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'info': !exists(json, 'info') ? undefined : json['info'],
        'parcelcode': !exists(json, 'parcelcode') ? undefined : json['parcelcode'],
        'recipienttell': !exists(json, 'recipienttell') ? undefined : json['recipienttell'],
    };
}

export function EntDepositToJSON(value?: EntDeposit | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'addedtime': value.addedtime,
        'depositorname': value.depositorname,
        'depositortell': value.depositortell,
        'edges': EntDepositEdgesToJSON(value.edges),
        'id': value.id,
        'info': value.info,
        'parcelcode': value.parcelcode,
        'recipienttell': value.recipienttell,
    };
}


